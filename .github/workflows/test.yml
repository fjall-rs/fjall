name: Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "**"

env:
  CARGO_TERM_COLOR: always

jobs:
  examples:
    timeout-minutes: 20
    strategy:
      matrix:
        rust_version:
          - stable # We cannot run with MSRV because some deps may require a higher MSRV
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust_version }}
      - name: Set up cargo cache
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: ${{ runner.os }}-cargo
          workspaces: >
            . -> target
            examples/actix-kv -> target
            examples/axum-kv -> target
            examples/basic -> target
            examples/gc-simple -> target
            examples/partition-rotation -> target
            examples/permuterm -> target
            examples/rolling-log -> target
            examples/secondary-index -> target
            examples/structured -> target
            examples/suffix-search -> target
            examples/tokio -> target
            examples/triplestore -> target
            examples/tx-atomic-counter -> target
            examples/tx-blob-cas
            examples/tx-mpmc-queue -> target
            examples/tx-partition-move -> target
            examples/tx-ssi-atomic-counter -> target
            examples/tx-ssi-cc -> target
            examples/tx-ssi-mpmc-queue -> target
            examples/tx-ssi-partition-move -> target
            examples/unique-index -> target
      - name: Build & test examples
        run: node compile_examples.mjs
  test:
    timeout-minutes: 20
    strategy:
      matrix:
        rust_version:
          - stable
          - "1.89.0" # MSRV
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust_version }}
      - name: Add rustfmt
        run: rustup component add rustfmt
      - name: Add clippy
        run: rustup component add clippy
      - name: Set up cargo cache
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: ${{ runner.os }}-cargo
          workspaces: >
            . -> target
      - name: Install cargo-all-features
        run: cargo install cargo-all-features
      - uses: taiki-e/install-action@nextest
      - name: Format
        run: cargo fmt --all -- --check
      - name: Clippy
        run: cargo clippy
      - name: Build permutations
        run: cargo build-all-features
      - name: Run whitebox tests
        run: cargo test --features __internal_whitebox -- whitebox_ --test-threads=1
        env:
          RUST_LOG: trace
      - name: Run tests
        run: cargo nextest run --features lz4,single_writer_tx
      - name: Run SSI tests
        run: cargo nextest run --no-default-features --features ssi_tx tx_ssi_
      - name: Run doc tests
        run: cargo test --doc
      - name: Run SSI doc tests
        run: cargo test --no-default-features --features ssi_tx --doc
  cross:
    timeout-minutes: 15
    name: cross
    strategy:
      matrix:
        target:
          - aarch64-unknown-linux-gnu
          - aarch64-unknown-linux-musl
          - i686-unknown-linux-gnu
          - powerpc64-unknown-linux-gnu
          - riscv64gc-unknown-linux-gnu
          # - aarch64-linux-android
          # - i686-linux-android
          # - x86_64-linux-android
          #- mips64-unknown-linux-gnuabi64
          #- x86_64-apple-darwin
          #- aarch64-apple-darwin
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: cross test
        run: |
          cargo install cross
          cross test --target ${{ matrix.target }}
